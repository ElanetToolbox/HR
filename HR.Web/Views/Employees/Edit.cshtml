@model HR.Data.Models.Employee
@using HR.Data.Models

@{
    ViewBag.Title = "Edit";
    rContext currentContext = Session[nameof(currentContext)] as rContext;
}

<h2>Edit</h2>

@using (Html.BeginForm(null,null,FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @*<div hidden="hidden">
        @Html.EditorForModel()
    </div>*@

    <div class="form-group">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.Label("Επώνυμο", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Ονομα", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ονοματεπώνυμο PhoneApp", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ημ/νία Πρόσληψης", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <input name="DateHired" type="date" class="form-control" value="@Model.DateHired.Value.Date.ToString("yyyy-MM-dd")">
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ημ/νία Γέννησης", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @if (Model.DoB != null)
                {
                    <input type="date" name="DoB" class="form-control" value="@Model.DoB.Value.Date.ToString("yyyy-MM-dd")">
                }
                else
                {
                    <input type="date" name="DoB" class="form-control">
                }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Διεύθυνση", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <select name="directorate" class="form-control">
                    <option value=""></option>
                    @if (Model.Directorate == "Διευθ. Υποστήριξης")
                    {
                        <option value="Διευθ. Υποστήριξης" selected>Διευθ. Υποστήριξης</option>
                    }
                    else
                    {
                        <option value="Διευθ. Υποστήριξης">Διευθ. Υποστήριξης</option>
                    }
                    @if (Model.Directorate == "Διευθ. Διαχείρισης")
                    {
                        <option value="Διευθ. Διαχείρισης" selected>Διευθ. Διαχείρισης</option>
                    }
                    else
                    {
                        <option value="Διευθ. Διαχείρισης">Διευθ. Διαχείρισης</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Είδικότητα", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Τίτλος PhoneApp", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SpecialPosition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (currentContext.User.isHR)
        {
            <div class="form-group">
                @Html.Label("Μικτά", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.MixedIncome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MixedIncome, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("e-mail", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Θέση", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <table>
                    <tr>
                        <td>
                            <select name="Floor" class="form-control">
                                <option value=""></option>
                                @foreach (var f in Functions.GetFloors())
                                {
                                    if (Model.floor == f.Key)
                                    {
                                        <option value="@f.Key" selected>@f.Value</option>
                                    }
                                    else
                                    {
                                        <option value="@f.Key">@f.Value</option>
                                    }
                                }
                            </select>
                        </td>
                        <td>
                            <select name="Room" class="form-control">
                                <option value=""></option>
                                @foreach (var f in Functions.GetRooms())
                                {
                                    if (Model.room == f.Key)
                                    {
                                        <option value="@f.Key" selected>@f.Value</option>
                                    }
                                    else
                                    {
                                        <option value="@f.Key">@f.Value</option>
                                    }
                                }
                            </select>
                        </td>
                        <td>
                            <input name="Spot" type="text" class="form-control" style="width:60px" value="@Model.spot"/>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Τηλέφωνο", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @for (int i = 0; i < Model.Teams.Count() + 2; i++)
            {
                if (i < Model.Teams.Count())
                {
                    Html.RenderAction("TeamsPartial", "Employees", Model.Teams[i]);
                }
                else
                {
                    Html.RenderAction("TeamsPartial", "Employees", new Team());
                }
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <input type="submit" value="Αποθήκευση" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
